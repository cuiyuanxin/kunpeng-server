basePath: /
definitions:
  dto.APICreateReq:
    properties:
      group:
        example: 用户管理
        type: string
      method:
        example: GET
        type: string
      name:
        example: 获取用户列表
        type: string
      path:
        example: /api/v1/users
        type: string
      remark:
        example: 获取用户列表API
        type: string
      status:
        example: 1
        type: integer
    required:
    - group
    - method
    - name
    - path
    type: object
  dto.APIRoleResp:
    properties:
      api_ids:
        items:
          type: integer
        type: array
    type: object
  dto.APIUpdateReq:
    properties:
      group:
        example: 用户管理
        type: string
      id:
        example: 1
        type: integer
      method:
        example: GET
        type: string
      name:
        example: 获取用户列表
        type: string
      path:
        example: /api/v1/users
        type: string
      remark:
        example: 获取用户列表API
        type: string
      status:
        example: 1
        type: integer
    required:
    - group
    - id
    - method
    - name
    - path
    type: object
  dto.DeptCreateReq:
    properties:
      email:
        example: tech@example.com
        type: string
      leader:
        example: 张三
        type: string
      name:
        example: 技术部
        type: string
      parent_id:
        example: 0
        type: integer
      phone:
        example: "13800138000"
        type: string
      remark:
        example: 技术部门
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
    required:
    - name
    type: object
  dto.DeptTreeResp:
    properties:
      children:
        items:
          $ref: '#/definitions/dto.DeptTreeResp'
        type: array
      email:
        type: string
      id:
        type: integer
      leader:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      phone:
        type: string
      sort:
        type: integer
      status:
        type: integer
    type: object
  dto.DeptUpdateReq:
    properties:
      email:
        example: tech@example.com
        type: string
      id:
        example: 1
        type: integer
      leader:
        example: 张三
        type: string
      name:
        example: 技术部
        type: string
      parent_id:
        example: 0
        type: integer
      phone:
        example: "13800138000"
        type: string
      remark:
        example: 技术部门
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
    required:
    - id
    - name
    type: object
  dto.DictDataCreateReq:
    properties:
      dict_type:
        example: sys_gender
        type: string
      label:
        example: 男
        type: string
      remark:
        example: 男性
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
      value:
        example: "1"
        type: string
    required:
    - dict_type
    - label
    - value
    type: object
  dto.DictDataUpdateReq:
    properties:
      dict_type:
        example: sys_gender
        type: string
      id:
        example: 1
        type: integer
      label:
        example: 男
        type: string
      remark:
        example: 男性
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
      value:
        example: "1"
        type: string
    required:
    - dict_type
    - id
    - label
    - value
    type: object
  dto.DictTypeCreateReq:
    properties:
      name:
        example: 性别
        type: string
      remark:
        example: 性别字典
        type: string
      status:
        example: 1
        type: integer
      type:
        example: sys_gender
        type: string
    required:
    - name
    - type
    type: object
  dto.DictTypeUpdateReq:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: 性别
        type: string
      remark:
        example: 性别字典
        type: string
      status:
        example: 1
        type: integer
      type:
        example: sys_gender
        type: string
    required:
    - id
    - name
    - type
    type: object
  dto.IDsReq:
    type: object
  dto.LoginLogResp:
    properties:
      browser:
        description: 浏览器
        type: string
      created_at:
        type: string
      device:
        description: 设备
        type: string
      id:
        type: integer
      ip:
        description: IP地址
        type: string
      location:
        description: 地理位置
        type: string
      message:
        description: 消息描述
        type: string
      os:
        description: 操作系统
        type: string
      status:
        description: 状态
        type: integer
      status_name:
        description: 状态名称
        type: string
      user_id:
        description: 用户ID
        type: integer
      username:
        description: 用户名
        type: string
    type: object
  dto.MenuCreateReq:
    properties:
      component:
        example: Layout
        type: string
      icon:
        example: setting
        type: string
      name:
        example: 系统管理
        type: string
      parent_id:
        example: 0
        type: integer
      path:
        example: /system
        type: string
      permission:
        example: system
        type: string
      remark:
        example: 系统管理菜单
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
      type:
        example: 0
        type: integer
      visible:
        example: 1
        type: integer
    required:
    - name
    - type
    type: object
  dto.MenuRoleResp:
    properties:
      menu_ids:
        items:
          type: integer
        type: array
    type: object
  dto.MenuTreeResp:
    properties:
      children:
        items:
          $ref: '#/definitions/dto.MenuTreeResp'
        type: array
      component:
        type: string
      icon:
        type: string
      id:
        type: integer
      is_cache:
        type: integer
      is_frame:
        type: integer
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
      permission:
        type: string
      sort:
        type: integer
      status:
        type: integer
      type:
        type: integer
      visible:
        type: integer
    type: object
  dto.MenuUpdateReq:
    properties:
      component:
        example: Layout
        type: string
      icon:
        example: setting
        type: string
      id:
        example: 1
        type: integer
      name:
        example: 系统管理
        type: string
      parent_id:
        example: 0
        type: integer
      path:
        example: /system
        type: string
      permission:
        example: system
        type: string
      remark:
        example: 系统管理菜单
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
      type:
        example: 0
        type: integer
      visible:
        example: 1
        type: integer
    required:
    - id
    - name
    - type
    type: object
  dto.PageResp:
    properties:
      list:
        description: 数据列表
      page_num:
        description: 当前页码
        type: integer
      page_size:
        description: 每页数量
        type: integer
      total:
        description: 总数
        type: integer
      total_pages:
        description: 总页数
        type: integer
    type: object
  dto.PostCreateReq:
    properties:
      code:
        example: CTO
        type: string
      name:
        example: 技术总监
        type: string
      remark:
        example: 技术总监岗位
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
    required:
    - code
    - name
    type: object
  dto.PostUpdateReq:
    properties:
      code:
        example: CTO
        type: string
      id:
        example: 1
        type: integer
      name:
        example: 技术总监
        type: string
      remark:
        example: 技术总监岗位
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
    required:
    - code
    - id
    - name
    type: object
  dto.RefreshTokenReq:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - refresh_token
    type: object
  dto.RoleAPIReq:
    type: object
  dto.RoleCreateReq:
    properties:
      code:
        example: test
        type: string
      name:
        example: 测试角色
        type: string
      remark:
        example: 测试角色
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
    required:
    - code
    - name
    type: object
  dto.RoleMenuReq:
    type: object
  dto.RoleUpdateReq:
    properties:
      code:
        example: test
        type: string
      id:
        example: 1
        type: integer
      name:
        example: 测试角色
        type: string
      remark:
        example: 测试角色
        type: string
      sort:
        example: 0
        type: integer
      status:
        example: 1
        type: integer
    required:
    - code
    - id
    - name
    type: object
  dto.StatusReq:
    properties:
      id:
        description: ID
        example: 1
        type: integer
      status:
        description: 状态
        example: 1
        type: integer
    required:
    - id
    - status
    type: object
  dto.UserChangePasswordReq:
    properties:
      new_password:
        example: Def456$%^
        type: string
      old_password:
        example: Abc123!@#
        type: string
    required:
    - new_password
    - old_password
    type: object
  dto.UserCreateReq:
    properties:
      avatar:
        example: https://example.com/avatar.png
        type: string
      dept_id:
        example: 1
        type: integer
      email:
        example: zhangsan@example.com
        type: string
      gender:
        example: 1
        type: integer
      mobile:
        example: "13800138000"
        type: string
      nickname:
        example: 张三
        type: string
      password:
        example: Abc123!@#
        type: string
      post_id:
        example: 1
        type: integer
      real_name:
        example: 张三
        type: string
      remark:
        example: 测试用户
        type: string
      role_id:
        example: 1
        type: integer
      status:
        example: 1
        type: integer
      username:
        example: zhangsan
        type: string
    required:
    - password
    - username
    type: object
  dto.UserInfoResp:
    properties:
      avatar:
        type: string
      dept_name:
        type: string
      gender:
        type: integer
      nickname:
        type: string
      post_name:
        type: string
      realname:
        type: string
      role_name:
        type: string
      userId:
        type: integer
      username:
        type: string
    type: object
  dto.UserLoginReq:
    properties:
      account:
        description: 账号（用户名或手机号）
        example: admin
        type: string
      captcha:
        description: 验证码（手机号登录时必填）
        example: "123456"
        type: string
      captcha_id:
        example: abcd1234
        type: string
      login_type:
        description: 'username: 用户名登录, mobile: 手机号登录'
        enum:
        - username
        - mobile
        example: username
        type: string
      password:
        description: 密码（账号登录时必填）
        example: Abc123!@#
        type: string
      remember_me:
        type: boolean
    required:
    - account
    - login_type
    type: object
  dto.UserLoginResp:
    properties:
      access_token:
        type: string
      expires_in:
        description: access token过期时间（秒）
        type: integer
      refresh_expires_in:
        description: refresh token过期时间（秒）
        type: integer
      refresh_token:
        type: string
    type: object
  dto.UserUpdateReq:
    properties:
      avatar:
        example: https://example.com/avatar.png
        type: string
      dept_id:
        example: 1
        type: integer
      email:
        example: zhangsan@example.com
        type: string
      gender:
        example: 1
        type: integer
      id:
        example: 1
        type: integer
      mobile:
        example: "13800138000"
        type: string
      nickname:
        example: 张三
        type: string
      post_id:
        example: 1
        type: integer
      real_name:
        example: 张三
        type: string
      remark:
        example: 测试用户
        type: string
      role_id:
        example: 1
        type: integer
      status:
        example: 1
        type: integer
    required:
    - id
    type: object
  model.API:
    properties:
      created_at:
        type: string
      group:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      remark:
        type: string
      status:
        description: 0:禁用 1:启用
        type: integer
      updated_at:
        type: string
    type: object
  model.Dept:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      leader:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      phone:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        description: 0:禁用 1:启用
        type: integer
      updated_at:
        type: string
    type: object
  model.DictData:
    properties:
      created_at:
        type: string
      dict_type:
        type: string
      id:
        type: integer
      label:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        description: 0:禁用 1:启用
        type: integer
      updated_at:
        type: string
      value:
        type: string
    type: object
  model.DictType:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      status:
        description: 0:禁用 1:启用
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
  model.Menu:
    properties:
      component:
        type: string
      created_at:
        type: string
      icon:
        type: string
      id:
        type: integer
      is_cache:
        description: 0:不缓存 1:缓存
        type: integer
      is_frame:
        description: 0:外链 1:内部页面
        type: integer
      name:
        type: string
      parent_id:
        type: integer
      path:
        type: string
      permission:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        description: 0:禁用 1:启用
        type: integer
      type:
        description: 0:目录 1:菜单 2:按钮
        type: integer
      updated_at:
        type: string
      visible:
        description: 0:隐藏 1:显示
        type: integer
    type: object
  model.Post:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        description: 0:禁用 1:启用
        type: integer
      updated_at:
        type: string
    type: object
  model.Role:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        description: 0:禁用 1:启用
        type: integer
      updated_at:
        type: string
    type: object
  model.User:
    properties:
      app_key:
        type: string
      avatar:
        type: string
      created_at:
        type: string
      dept_id:
        type: integer
      email:
        type: string
      gender:
        description: 0:未知 1:男 2:女
        type: integer
      id:
        type: integer
      login_ip:
        type: string
      login_time:
        type: string
      mobile:
        type: string
      nickname:
        type: string
      post_id:
        type: integer
      real_name:
        type: string
      remark:
        type: string
      role_id:
        type: integer
      status:
        description: 0:禁用 1:启用
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  response.Response:
    properties:
      code:
        description: 错误码
        type: integer
      data:
        description: 响应数据
      message:
        description: 错误消息
        type: string
      traceId:
        description: 链路追踪ID
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 鲲鹏后台管理系统API文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: 鲲鹏后台管理系统API
  version: "1.0"
paths:
  /api/v1/apis:
    get:
      consumes:
      - application/json
      description: 获取API列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        required: true
        type: integer
      - description: API分组
        in: query
        name: group
        type: string
      - description: API名称
        in: query
        name: name
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      - description: 请求路径
        in: query
        name: path
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      - description: 开始时间
        in: query
        name: begin_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取API列表
      tags:
      - API管理
    post:
      consumes:
      - application/json
      description: 创建API
      parameters:
      - description: 创建API请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.APICreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建API
      tags:
      - API管理
    put:
      consumes:
      - application/json
      description: 更新API
      parameters:
      - description: 更新API请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.APIUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新API
      tags:
      - API管理
  /api/v1/apis/{id}:
    delete:
      consumes:
      - application/json
      description: 删除API
      parameters:
      - description: API ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除API
      tags:
      - API管理
    get:
      consumes:
      - application/json
      description: 根据ID获取API
      parameters:
      - description: API ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.API'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取API
      tags:
      - API管理
  /api/v1/apis/all:
    get:
      consumes:
      - application/json
      description: 获取所有API
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.API'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取所有API
      tags:
      - API管理
  /api/v1/apis/batch:
    delete:
      consumes:
      - application/json
      description: 批量删除API
      parameters:
      - description: 批量删除API请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除API
      tags:
      - API管理
  /api/v1/depts:
    get:
      consumes:
      - application/json
      description: 获取部门列表
      parameters:
      - description: 部门名称
        in: query
        name: name
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Dept'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取部门列表
      tags:
      - 部门管理
    post:
      consumes:
      - application/json
      description: 创建部门
      parameters:
      - description: 创建部门请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DeptCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建部门
      tags:
      - 部门管理
    put:
      consumes:
      - application/json
      description: 更新部门
      parameters:
      - description: 更新部门请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DeptUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新部门
      tags:
      - 部门管理
  /api/v1/depts/{id}:
    delete:
      consumes:
      - application/json
      description: 删除部门
      parameters:
      - description: 部门ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除部门
      tags:
      - 部门管理
    get:
      consumes:
      - application/json
      description: 根据ID获取部门
      parameters:
      - description: 部门ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Dept'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取部门
      tags:
      - 部门管理
  /api/v1/depts/tree:
    get:
      consumes:
      - application/json
      description: 获取部门树
      parameters:
      - description: 部门名称
        in: query
        name: name
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.DeptTreeResp'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取部门树
      tags:
      - 部门管理
  /api/v1/dict/data:
    get:
      consumes:
      - application/json
      description: 获取字典数据列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        required: true
        type: integer
      - description: 字典类型
        in: query
        name: dict_type
        required: true
        type: string
      - description: 字典标签
        in: query
        name: label
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      - description: 开始时间
        in: query
        name: begin_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取字典数据列表
      tags:
      - 字典管理
    post:
      consumes:
      - application/json
      description: 创建字典数据
      parameters:
      - description: 创建字典数据请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DictDataCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建字典数据
      tags:
      - 字典管理
    put:
      consumes:
      - application/json
      description: 更新字典数据
      parameters:
      - description: 更新字典数据请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DictDataUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新字典数据
      tags:
      - 字典管理
  /api/v1/dict/data/{id}:
    delete:
      consumes:
      - application/json
      description: 删除字典数据
      parameters:
      - description: 字典数据ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除字典数据
      tags:
      - 字典管理
    get:
      consumes:
      - application/json
      description: 根据ID获取字典数据
      parameters:
      - description: 字典数据ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DictData'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取字典数据
      tags:
      - 字典管理
  /api/v1/dict/data/batch:
    delete:
      consumes:
      - application/json
      description: 批量删除字典数据
      parameters:
      - description: 批量删除字典数据请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除字典数据
      tags:
      - 字典管理
  /api/v1/dict/data/type/{dict_type}:
    get:
      consumes:
      - application/json
      description: 根据字典类型获取字典数据
      parameters:
      - description: 字典类型
        in: path
        name: dict_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.DictData'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据字典类型获取字典数据
      tags:
      - 字典管理
  /api/v1/dict/types:
    get:
      consumes:
      - application/json
      description: 获取字典类型列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        required: true
        type: integer
      - description: 字典名称
        in: query
        name: name
        type: string
      - description: 字典类型
        in: query
        name: type
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      - description: 开始时间
        in: query
        name: begin_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取字典类型列表
      tags:
      - 字典管理
    post:
      consumes:
      - application/json
      description: 创建字典类型
      parameters:
      - description: 创建字典类型请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DictTypeCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建字典类型
      tags:
      - 字典管理
    put:
      consumes:
      - application/json
      description: 更新字典类型
      parameters:
      - description: 更新字典类型请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.DictTypeUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新字典类型
      tags:
      - 字典管理
  /api/v1/dict/types/{id}:
    delete:
      consumes:
      - application/json
      description: 删除字典类型
      parameters:
      - description: 字典类型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除字典类型
      tags:
      - 字典管理
    get:
      consumes:
      - application/json
      description: 根据ID获取字典类型
      parameters:
      - description: 字典类型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.DictType'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取字典类型
      tags:
      - 字典管理
  /api/v1/dict/types/all:
    get:
      consumes:
      - application/json
      description: 获取所有字典类型
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.DictType'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取所有字典类型
      tags:
      - 字典管理
  /api/v1/dict/types/batch:
    delete:
      consumes:
      - application/json
      description: 批量删除字典类型
      parameters:
      - description: 批量删除字典类型请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除字典类型
      tags:
      - 字典管理
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 用户登录请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserLoginResp'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录
      tags:
      - 用户管理
  /api/v1/login-logs:
    get:
      consumes:
      - application/json
      description: 获取登录日志列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: pageNum
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: pageSize
        type: integer
      - description: 用户ID
        in: query
        name: userID
        type: integer
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      - description: IP地址
        in: query
        name: ip
        type: string
      - description: 开始时间
        in: query
        name: beginTime
        type: string
      - description: 结束时间
        in: query
        name: endTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取登录日志列表
      tags:
      - 登录日志管理
  /api/v1/login-logs/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID删除登录日志
      parameters:
      - description: 登录日志ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除登录日志
      tags:
      - 登录日志管理
    get:
      consumes:
      - application/json
      description: 根据ID获取登录日志详情
      parameters:
      - description: 登录日志ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginLogResp'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取登录日志
      tags:
      - 登录日志管理
  /api/v1/login-logs/batch:
    delete:
      consumes:
      - application/json
      description: 根据ID列表批量删除登录日志
      parameters:
      - description: ID列表
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除登录日志
      tags:
      - 登录日志管理
  /api/v1/login-logs/clean:
    post:
      consumes:
      - application/json
      description: 清理指定天数之前的登录日志
      parameters:
      - default: 30
        description: 保留天数
        in: query
        name: days
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 清理旧日志
      tags:
      - 登录日志管理
  /api/v1/logout:
    post:
      consumes:
      - application/json
      description: 用户退出登录
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户退出登录
      tags:
      - 用户管理
  /api/v1/menus:
    get:
      consumes:
      - application/json
      description: 获取菜单列表
      parameters:
      - description: 菜单名称
        in: query
        name: name
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Menu'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取菜单列表
      tags:
      - 菜单管理
    post:
      consumes:
      - application/json
      description: 创建菜单
      parameters:
      - description: 创建菜单请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.MenuCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建菜单
      tags:
      - 菜单管理
    put:
      consumes:
      - application/json
      description: 更新菜单
      parameters:
      - description: 更新菜单请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.MenuUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - 菜单管理
  /api/v1/menus/{id}:
    delete:
      consumes:
      - application/json
      description: 删除菜单
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - 菜单管理
    get:
      consumes:
      - application/json
      description: 根据ID获取菜单
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Menu'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取菜单
      tags:
      - 菜单管理
  /api/v1/menus/tree:
    get:
      consumes:
      - application/json
      description: 获取菜单树
      parameters:
      - description: 菜单名称
        in: query
        name: name
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.MenuTreeResp'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取菜单树
      tags:
      - 菜单管理
  /api/v1/menus/user:
    get:
      consumes:
      - application/json
      description: 获取用户菜单树
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.MenuTreeResp'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户菜单树
      tags:
      - 菜单管理
  /api/v1/posts:
    get:
      consumes:
      - application/json
      description: 获取岗位列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        required: true
        type: integer
      - description: 岗位名称
        in: query
        name: name
        type: string
      - description: 岗位编码
        in: query
        name: code
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      - description: 开始时间
        in: query
        name: begin_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取岗位列表
      tags:
      - 岗位管理
    post:
      consumes:
      - application/json
      description: 创建岗位
      parameters:
      - description: 创建岗位请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PostCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建岗位
      tags:
      - 岗位管理
    put:
      consumes:
      - application/json
      description: 更新岗位
      parameters:
      - description: 更新岗位请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PostUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新岗位
      tags:
      - 岗位管理
  /api/v1/posts/{id}:
    delete:
      consumes:
      - application/json
      description: 删除岗位
      parameters:
      - description: 岗位ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除岗位
      tags:
      - 岗位管理
    get:
      consumes:
      - application/json
      description: 根据ID获取岗位
      parameters:
      - description: 岗位ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Post'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取岗位
      tags:
      - 岗位管理
  /api/v1/posts/all:
    get:
      consumes:
      - application/json
      description: 获取所有岗位
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Post'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取所有岗位
      tags:
      - 岗位管理
  /api/v1/posts/batch:
    delete:
      consumes:
      - application/json
      description: 批量删除岗位
      parameters:
      - description: 批量删除岗位请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除岗位
      tags:
      - 岗位管理
  /api/v1/refresh-token:
    post:
      consumes:
      - application/json
      description: 通过refresh token刷新access token和refresh token
      parameters:
      - description: 刷新token请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserLoginResp'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      summary: 刷新token
      tags:
      - 用户管理
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: 获取角色列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        required: true
        type: integer
      - description: 角色名称
        in: query
        name: name
        type: string
      - description: 角色编码
        in: query
        name: code
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      - description: 开始时间
        in: query
        name: begin_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      description: 创建角色
      parameters:
      - description: 创建角色请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - 角色管理
    put:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: 更新角色请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新角色
      tags:
      - 角色管理
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: 删除角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - 角色管理
    get:
      consumes:
      - application/json
      description: 根据ID获取角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Role'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取角色
      tags:
      - 角色管理
  /api/v1/roles/{id}/apis:
    get:
      consumes:
      - application/json
      description: 获取角色API
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.APIRoleResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取角色API
      tags:
      - 角色管理
  /api/v1/roles/{id}/menus:
    get:
      consumes:
      - application/json
      description: 获取角色菜单
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.MenuRoleResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取角色菜单
      tags:
      - 角色管理
  /api/v1/roles/all:
    get:
      consumes:
      - application/json
      description: 获取所有角色
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Role'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取所有角色
      tags:
      - 角色管理
  /api/v1/roles/apis:
    put:
      consumes:
      - application/json
      description: 更新角色API
      parameters:
      - description: 更新角色API请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleAPIReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新角色API
      tags:
      - 角色管理
  /api/v1/roles/batch:
    delete:
      consumes:
      - application/json
      description: 批量删除角色
      parameters:
      - description: 批量删除角色请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除角色
      tags:
      - 角色管理
  /api/v1/roles/menus:
    put:
      consumes:
      - application/json
      description: 更新角色菜单
      parameters:
      - description: 更新角色菜单请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleMenuReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新角色菜单
      tags:
      - 角色管理
  /api/v1/roles/status:
    put:
      consumes:
      - application/json
      description: 修改角色状态
      parameters:
      - description: 修改角色状态请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改角色状态
      tags:
      - 角色管理
  /api/v1/user/info:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserInfoResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - 用户管理
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 获取用户列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page_num
        required: true
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        required: true
        type: integer
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 昵称
        in: query
        name: nickname
        type: string
      - description: 手机号
        in: query
        name: mobile
        type: string
      - description: 状态
        enum:
        - 0
        - 1
        in: query
        name: status
        type: integer
      - description: 部门ID
        in: query
        name: dept_id
        type: integer
      - description: 开始时间
        in: query
        name: begin_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.PageResp'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
    post:
      consumes:
      - application/json
      description: 创建用户
      parameters:
      - description: 创建用户请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: 更新用户请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户
      tags:
      - 用户管理
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - 用户管理
    get:
      consumes:
      - application/json
      description: 根据ID获取用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取用户
      tags:
      - 用户管理
  /api/v1/users/{id}/password/reset:
    put:
      consumes:
      - application/json
      description: 重置用户密码
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 重置用户密码
      tags:
      - 用户管理
  /api/v1/users/batch:
    delete:
      consumes:
      - application/json
      description: 批量删除用户
      parameters:
      - description: 批量删除用户请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.IDsReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 批量删除用户
      tags:
      - 用户管理
  /api/v1/users/password:
    put:
      consumes:
      - application/json
      description: 修改密码
      parameters:
      - description: 修改密码请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UserChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改密码
      tags:
      - 用户管理
  /api/v1/users/status:
    put:
      consumes:
      - application/json
      description: 修改用户状态
      parameters:
      - description: 修改用户状态请求
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.StatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改用户状态
      tags:
      - 用户管理
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
