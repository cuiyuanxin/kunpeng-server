# =============================================================================
# Kunpeng Server 开发环境配置文件
# 针对开发环境优化的配置，启用调试功能和详细日志
# =============================================================================

# 应用基础配置
app:
  name: "kunpeng-server"              # 应用名称，用于日志标识和服务发现
  version: "1.0.0"                    # 应用版本号，用于版本管理和API版本控制
  environment: "development"          # 运行环境：开发环境
  debug: true                         # 调试模式：开发环境启用详细日志和错误信息

# HTTP服务器配置
server:
  host: "localhost"                   # 服务器监听地址：开发环境仅本地访问
  port: 8081                          # 服务器监听端口号
  read_timeout: 30s                   # 读取请求超时时间
  write_timeout: 30s                  # 写入响应超时时间
  idle_timeout: 60s                   # 空闲连接超时时间

# 主数据库配置（开发环境）
database:
  # 基础连接配置
  driver: "mysql"                     # 数据库驱动：开发环境使用MySQL
  host: "localhost"                   # 数据库服务器地址：本地开发数据库
  port: 3306                          # 数据库服务器端口
  username: "kunpeng"                    # 数据库用户名
  password: "kunpeng123"                # 数据库密码：开发环境简单密码
  database: "kunpeng"             # 数据库名称：开发环境专用数据库
  charset: "utf8mb4"                  # 字符集：支持完整的UTF-8字符集
  timezone: "Local"                   # 时区设置：使用本地时区
  
  # 连接池配置（开发环境优化）
  max_open_conns: 50                  # 最大打开连接数：开发环境较小值
  max_idle_conns: 5                   # 最大空闲连接数：开发环境较小值
  conn_max_lifetime: 3600s            # 连接最大生命周期
  conn_max_idle_time: 1800s           # 连接最大空闲时间
  
  # gRPC支持配置
  grpc_enabled: true                  # 是否启用gRPC数据库服务：开发环境启用以便测试
  grpc_pool_size: 3                   # gRPC连接池大小：开发环境较小值

# 多数据库配置（开发环境示例）
# 开发环境可以配置多个测试数据库
databases:
  # 用户数据库（开发环境）
  user_db:
    driver: "mysql"                   # 数据库类型
    host: "localhost"                 # 数据库地址
    port: 3306                        # 端口号
    username: "root"                  # 用户名
    password: "password"              # 密码
    database: "kunpeng_users_dev"     # 开发环境用户数据库
    charset: "utf8mb4"                # 字符集
    timezone: "Local"                 # 时区
    max_open_conns: 20                # 最大连接数：开发环境较小值
    max_idle_conns: 3                 # 最大空闲连接数
    conn_max_lifetime: 3600s          # 连接生命周期
    grpc_enabled: true                # 启用gRPC支持
    grpc_pool_size: 2                 # gRPC连接池大小
  
  # 测试数据库（SQLite，便于开发测试）
  test_db:
    driver: "sqlite"                  # SQLite驱动：开发环境便于测试
    file_path: "./data/test_dev.db"   # SQLite文件路径
    max_open_conns: 5                 # 最大连接数
    max_idle_conns: 1                 # 最大空闲连接数
    conn_max_lifetime: 1800s          # 连接生命周期
    grpc_enabled: false               # SQLite不需要gRPC支持

# Redis缓存配置（开发环境）
redis:
  host: "localhost"                   # Redis服务器地址：本地Redis
  port: 6379                          # Redis服务器端口
  password: ""                        # Redis密码：开发环境无密码
  db: 1                               # Redis数据库编号：使用1号数据库避免与其他项目冲突
  pool_size: 5                        # 连接池大小：开发环境较小值
  min_idle_conns: 2                   # 最小空闲连接数
  dial_timeout: 5s                    # 连接超时时间
  read_timeout: 3s                    # 读取超时时间
  write_timeout: 3s                   # 写入超时时间
  pool_timeout: 4s                    # 连接池获取连接超时时间
  idle_timeout: 300s                  # 空闲连接超时时间

# 日志系统配置（开发环境）
logging:
  # 基础日志配置
  level: "debug"                      # 日志级别：开发环境使用debug级别查看详细信息
  format: "console"                   # 日志格式：开发环境使用控制台格式便于阅读
  output: "stdout"                    # 输出目标：开发环境输出到控制台
  file_path: "logs/app_dev.log"       # 日志文件路径（备用）
  
  # 日志轮转配置
  max_size: 50                        # 单个日志文件最大大小（MB）：开发环境较小值
  max_backups: 3                      # 保留的旧日志文件数量：开发环境较少
  max_age: 7                          # 日志文件保留天数：开发环境较短
  compress: false                     # 是否压缩旧日志文件：开发环境不压缩便于查看
  
  # 高级日志配置
  separate_files: false               # 是否按日志级别分别存储：开发环境不分离
  log_dir: "logs"                     # 日志目录
  auto_mode: true                     # 环境自适应模式：根据environment自动调整
  force_console: true                 # 强制控制台输出：开发环境强制输出到控制台
  force_file: false                   # 强制文件输出：开发环境不强制文件输出
  
  # GORM数据库日志配置（开发环境）
  gorm:
    enabled: true                     # 是否启用GORM日志记录：开发环境启用
    level: "info"                     # GORM日志级别：开发环境显示所有SQL
    slow_threshold: "100ms"           # 慢查询阈值：开发环境更严格的阈值
    colorful: true                    # 是否启用彩色输出：开发环境启用彩色
    ignore_record_not_found_error: true # 是否忽略记录未找到错误
    sql_file: "logs/sql_dev.log"      # SQL日志文件路径
    error_file: "logs/gorm_error_dev.log" # GORM错误日志文件路径
    auto_mode: true                   # 环境自适应模式
    force_console: true               # 强制控制台输出：开发环境显示SQL到控制台
    force_file: false                 # 强制文件输出：开发环境不强制文件输出
  
  # 日志钩子扩展配置（开发环境）
  hooks:
    # 链路追踪钩子
    trace:
      enabled: true                   # 是否启用链路追踪日志：开发环境启用便于调试
      service_name: "kunpeng-server-dev" # 服务名称：开发环境标识
    
    # 自定义钩子
    custom:
      enabled: true                   # 是否启用自定义日志钩子：开发环境启用便于测试
    
    # gRPC日志钩子
    grpc:
      enabled: true                   # 是否启用gRPC日志记录：开发环境启用
      server_addr: "localhost:50051"  # gRPC服务器地址：本地gRPC服务

# JWT认证配置（开发环境）
jwt:
  secret: "dev-secret-key-12345"      # JWT签名密钥：开发环境使用简单密钥
  expires_in: 24h                     # 访问令牌过期时间：开发环境24小时
  refresh_expires_in: 168h            # 刷新令牌过期时间：开发环境7天
  issuer: "kunpeng-server-dev"        # JWT签发者标识：开发环境标识

# =============================================================================
# 开发环境配置说明：
# 1. 启用debug模式和详细日志，便于开发调试
# 2. 使用控制台输出，实时查看日志信息
# 3. 数据库连接池参数较小，适合单人开发
# 4. 启用所有日志钩子，便于功能测试
# 5. JWT密钥简单，仅用于开发测试
# 6. 慢查询阈值较严格，便于性能优化
# 7. 使用本地服务，无需外部依赖
# =============================================================================