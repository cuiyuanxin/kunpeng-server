# =============================================================================
# Kunpeng Server 配置文件
# 这是主配置文件，包含所有可用的配置选项和详细说明
# =============================================================================

# 应用基础配置
app:
  name: "kunpeng-server"              # 应用名称，用于日志标识和服务发现
  version: "1.0.0"                    # 应用版本号，用于版本管理和API版本控制
  environment: "development"          # 运行环境：development(开发)、production(生产)、testing(测试)
  debug: true                         # 调试模式：true启用详细日志和错误信息，false关闭调试信息

# HTTP服务器配置
server:
  host: "0.0.0.0"                    # 服务器监听地址：0.0.0.0监听所有接口，localhost仅本地访问
  port: 8080                          # 服务器监听端口号
  read_timeout: 30s                   # 读取请求超时时间，防止慢客户端占用连接
  write_timeout: 30s                  # 写入响应超时时间，防止慢客户端占用连接
  idle_timeout: 60s                   # 空闲连接超时时间，Keep-Alive连接的最大空闲时间

# 主数据库配置（单数据库模式，向后兼容）
database:
  # 基础连接配置
  driver: "mysql"                     # 数据库驱动：mysql、postgres、sqlite、sqlserver、clickhouse
  host: "localhost"                   # 数据库服务器地址
  port: 3306                          # 数据库服务器端口
  username: "root"                    # 数据库用户名
  password: "password"                # 数据库密码
  database: "kunpeng"                 # 数据库名称
  charset: "utf8mb4"                  # 字符集（MySQL专用）：utf8mb4支持完整的UTF-8字符集
  timezone: "Local"                   # 时区设置：Local使用系统时区，UTC使用UTC时区
  
  # 连接池配置（性能优化）
  max_open_conns: 100                 # 最大打开连接数：限制同时打开的数据库连接数量
  max_idle_conns: 10                  # 最大空闲连接数：保持的空闲连接数量，提高响应速度
  conn_max_lifetime: 3600s            # 连接最大生命周期：连接的最大存活时间，防止长时间连接问题
  conn_max_idle_time: 1800s           # 连接最大空闲时间：空闲连接的最大保持时间
  
  # gRPC支持配置
  grpc_enabled: true                  # 是否启用gRPC数据库服务：true启用gRPC接口，false仅HTTP接口
  grpc_pool_size: 5                   # gRPC连接池大小：gRPC服务的连接池数量

# 多数据库配置（可选，用于复杂业务场景）
# 当需要连接多个数据库时启用此配置
# 详细的多数据库配置示例和使用说明请参考：docs/DATABASE_GUIDE.md
# 支持的数据库类型：MySQL、PostgreSQL、SQLite、SQL Server、ClickHouse
# 支持的使用场景：微服务架构、读写分离、分库分表、多租户系统等
databases:
  # MySQL用户数据库示例
  user_db:
    driver: "mysql"                   # 数据库类型
    host: "localhost"                 # 数据库地址
    port: 3306                        # 端口号
    username: "root"                  # 用户名
    password: "password"              # 密码
    database: "kunpeng_users"         # 数据库名
    charset: "utf8mb4"                # 字符集
    timezone: "Local"                 # 时区
    max_open_conns: 50                # 最大连接数
    max_idle_conns: 5                 # 最大空闲连接数
    conn_max_lifetime: 3600s          # 连接生命周期
    grpc_enabled: true                # 启用gRPC支持
    grpc_pool_size: 3                 # gRPC连接池大小
  
  # PostgreSQL分析数据库示例
  analytics_db:
    driver: "postgres"                # PostgreSQL驱动
    host: "localhost"                 # 数据库地址
    port: 5432                        # PostgreSQL默认端口
    username: "postgres"              # 用户名
    password: "password"              # 密码
    database: "kunpeng_analytics"     # 数据库名
    schema: "public"                  # 模式名（PostgreSQL专用）
    ssl_mode: "disable"               # SSL模式：disable、require、verify-ca、verify-full
    timezone: "UTC"                   # 时区设置
    max_open_conns: 30                # 最大连接数
    max_idle_conns: 3                 # 最大空闲连接数
    conn_max_lifetime: 3600s          # 连接生命周期
    grpc_enabled: true                # 启用gRPC支持
  
  # SQLite缓存数据库示例
  cache_db:
    driver: "sqlite"                  # SQLite驱动
    file_path: "./data/cache.db"      # SQLite文件路径
    max_open_conns: 10                # 最大连接数（SQLite建议较小值）
    max_idle_conns: 2                 # 最大空闲连接数
    conn_max_lifetime: 1800s          # 连接生命周期
    grpc_enabled: false               # SQLite通常不需要gRPC支持

# Redis缓存配置
redis:
  host: "localhost"                   # Redis服务器地址
  port: 6379                          # Redis服务器端口
  password: ""                        # Redis密码，空字符串表示无密码
  db: 0                               # Redis数据库编号（0-15）
  pool_size: 10                       # 连接池大小：最大连接数量
  min_idle_conns: 5                   # 最小空闲连接数：保持的最小连接数量
  dial_timeout: 5s                    # 连接超时时间
  read_timeout: 3s                    # 读取超时时间
  write_timeout: 3s                   # 写入超时时间
  pool_timeout: 4s                    # 连接池获取连接超时时间
  idle_timeout: 300s                  # 空闲连接超时时间

# 日志系统配置
logging:
  # 基础日志配置
  level: "info"                       # 日志级别：debug、info、warn、error、fatal
  format: "console"                   # 日志格式：console(控制台格式)、json(JSON格式)
  output: "stdout"                    # 输出目标：stdout(标准输出)、file(文件)、both(同时输出)
  file_path: "logs/app.log"           # 日志文件路径（当output包含file时使用）
  
  # 日志轮转配置
  max_size: 100                       # 单个日志文件最大大小（MB）
  max_backups: 10                     # 保留的旧日志文件数量
  max_age: 30                         # 日志文件保留天数
  compress: true                      # 是否压缩旧日志文件
  
  # 高级日志配置
  separate_files: false               # 是否按日志级别分别存储到不同文件
  log_dir: "logs"                     # 日志目录（当separate_files为true时使用）
  auto_mode: true                     # 环境自适应模式：根据environment自动调整日志配置
  force_console: null                 # 强制控制台输出：true强制、false禁止、null自动
  force_file: null                    # 强制文件输出：true强制、false禁止、null自动
  
  # GORM数据库日志配置
  gorm:
    enabled: true                     # 是否启用GORM日志记录
    level: "info"                     # GORM日志级别：silent、error、warn、info
    slow_threshold: "200ms"           # 慢查询阈值：超过此时间的查询将被记录
    colorful: true                    # 是否启用彩色输出（仅控制台模式）
    ignore_record_not_found_error: true # 是否忽略记录未找到错误
    sql_file: "logs/sql.log"          # SQL日志文件路径
    error_file: "logs/gorm_error.log" # GORM错误日志文件路径
    auto_mode: true                   # 环境自适应模式
    force_console: null               # 强制控制台输出
    force_file: null                  # 强制文件输出
  
  # 日志钩子扩展配置
  hooks:
    # 链路追踪钩子
    trace:
      enabled: true                   # 是否启用链路追踪日志
      service_name: "kunpeng-server"  # 服务名称，用于链路追踪标识
    
    # 自定义钩子
    custom:
      enabled: false                 # 是否启用自定义日志钩子
    
    # gRPC日志钩子
    grpc:
      enabled: true                   # 是否启用gRPC日志记录
      server_addr: "localhost:50051"  # gRPC服务器地址

# JWT认证配置
jwt:
  secret: "your-secret-key"           # JWT签名密钥：生产环境请使用复杂的随机字符串
  expires_in: 24h                     # 访问令牌过期时间：24小时
  refresh_expires_in: 168h            # 刷新令牌过期时间：7天（168小时）
  issuer: "kunpeng-server"            # JWT签发者标识

# =============================================================================
# 配置说明：
# 1. 开发环境建议启用debug模式和详细日志
# 2. 生产环境建议关闭debug模式，使用文件日志，设置合适的连接池参数
# 3. 多数据库配置是可选的，仅在需要连接多个数据库时启用
#    - 详细配置示例请参考：docs/DATABASE_GUIDE.md
#    - 支持读写分离、微服务架构、多租户等场景
#    - 可同时连接MySQL、PostgreSQL、SQLite、SQL Server、ClickHouse
# 4. Redis配置根据实际部署情况调整
# 5. JWT密钥在生产环境中必须使用强密码
# 6. 日志级别和格式根据运维需求调整
# 7. 环境配置文件：
#    - config.dev.yaml：开发环境配置，包含多数据库示例
#    - config.prod.yaml：生产环境配置，包含主从分离示例
# =============================================================================